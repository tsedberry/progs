#configuring nginx to forward the REQUEST_USER header field to the proxied application (e.g. django) can be quite tricky
#you must include all of the following fields for it to work

#note: standard best practice location for config files are
# /var/log/nginx/access.log
# /var/log/nginx/error.log

#configuration file should be placed in
# /etc/nginx/conf.d/
#and must have the .conf extension

upstream django
{
  server unix://srv/web/socket.sock;
}

server
{
  listen 443 http2 ssl;
  list [::]:443;
  
  server_name must_match_cn_on_cert_and_address_in_web_browser;
  
  ssl_certificate path/to/pub/cert.pem;
  ssl_certificate_key path/to/priv/key.pem;
  ssl_client_certificate /path/to/trusted/partners.crt;
  
  ssl_verify_client on; #usefile field involving remote client cert will not be populated unless this setting is activated
  ssl_verify_depth 2; #this number may need to be tweaked
  
  client_max_body_size 75M;
  underscored_in_headers on; #otherwise nginx will silently drop some headers
  
  location /static
  {
    alias /path/to/dj/static;
  }
  
  location /
  {
    include /etc/nginx/uwsgi_params;
    uwsgi_param REMOTE_USER $ssl_client_s_dn;
    uwsgi_param SSL_CLIENT_VERIFY $ssl_client_verify;
    uwsgi_param SSL_CLIENT_S_DN $ssl_client_s_dn;
    uwsgi_param SSL_CLIENT_RAW_CERT $ssl_client_raw_cert;
    uwsgi_param SSL_PROTOCOL $ssl_protocol;
    uwsgi_param SSL_SERVER_NAME $ssl_server_name;
    uwsgi_pass django;
  }
}
